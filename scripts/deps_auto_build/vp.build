PACKAGE_NAME=vp
BASE_DIR="${DEV_BASE_DIR}/vp"

SOURCE_RETRIEVAL_METHOD=git
#SOURCE_URL=https://github.com/IWRC/aws-tools.git
SOURCE_URL=git@github.com:IWRC/vp8.git

SOURCE_DIR="${BASE_DIR}"
BUILD_DIR="${BASE_DIR}/build-${ARCH}"
INSTALL_DIR="${BASE_DIR}/install-${ARCH}"
PREBUILD_METHOD=cmake

CMAKE_PARAMS+=( -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}" )
CMAKE_PARAMS+=( -DOSGInstallType="Alternate Install Location" )
CMAKE_PARAMS+=( -DOSGInstallLocation="${OSG_INSTALL_DIR}" )
CMAKE_PARAMS+=( -DosgWorks_DIR="${OSGWORKS_INSTALL_DIR}/lib" )
CMAKE_PARAMS+=( -DBOOST_ROOT="${BOOST_INSTALL_DIR}" )
CMAKE_PARAMS+=( -DBoost_NO_SYSTEM_PATHS=ON )
CMAKE_PARAMS+=( -DPOCO_ROOT="${POCO_INSTALL_DIR}" )

case $PLATFORM in
  Windows)
    MSVC_CONFIG="${BUILD_TYPE}"
    if [ ${ARCH} = "32-bit" ]; then
      MSVC_PLATFORM=Win32
      CMAKE_PARAMS+=( -DQT_QMAKE_EXECUTABLE="C:/dev/deps/Qt/4.8.4_x86/bin/qmake.exe" )
    else
      MSVC_PLATFORM=x64
      CMAKE_PARAMS+=( -DQT_QMAKE_EXECUTABLE="C:/dev/deps/Qt/4.8.4_x64/bin/qmake.exe" )
    fi
    MSVC_SOLUTION="virtualpaint.sln"

    CMAKE_PARAMS+=( -DCMAKE_CONFIGURATION_TYPES="${BUILD_TYPE}" )
    CMAKE_PARAMS+=( -DBoost_INCLUDE_DIR="${BOOST_INSTALL_DIR}/include/${BOOST_VERSION_DIR}" )
    CMAKE_PARAMS+=( -Dswitchwire_DIR="${switchwire_INSTALL_DIR}/lib" )
    CMAKE_PARAMS+=( -Dcrunchstore_DIR="${crunchstore_INSTALL_DIR}/lib" )
    CMAKE_PARAMS+=( -Dpropertystore_DIR="${propertystore_INSTALL_DIR}/lib" )
    CMAKE_PARAMS+=( -DosgAudio_DIR="${OSGAUDIO_INSTALL_DIR}-openal/lib" )
    ;;
  Darwin )
    CMAKE_PARAMS+=( -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" )
    CMAKE_PARAMS+=( -DBoost_INCLUDE_DIR="${BOOST_INSTALL_DIR}/include" )
    CMAKE_PARAMS+=( -DCMAKE_CXX_FLAGS="-Wall -std=c++11 -stdlib=libc++" )
    ;;
  Linux )
    CMAKE_PARAMS+=( -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" )
    CMAKE_PARAMS+=( -DBoost_INCLUDE_DIR="${BOOST_INSTALL_DIR}/include" )
    ;;
esac

