PACKAGE_NAME=geolibwrapper
BASE_DIR="${DEV_BASE_DIR}/geolib-wrapper"

SOURCE_RETRIEVAL_METHOD=git
SOURCE_URL=git@github.com:praxik/geolib-wrapper.git


SOURCE_DIR="${BASE_DIR}"
BUILD_DIR="${BASE_DIR}/build-${ARCH}"
INSTALL_DIR="${BASE_DIR}/install-${ARCH}"
PREBUILD_METHOD=cmake

CMAKE_PARAMS+=( -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}" )

case $PLATFORM in
  Windows)
    MSVC_CONFIG="${BUILD_TYPE}"
    if [ ${ARCH} = "32-bit" ]; then
      CSHARP_PLATFORM=x86
      MSVC_PLATFORM=Win32
    else
      CSHARP_PLATFORM=x64
      MSVC_PLATFORM=x64
    fi
    MSVC_SOLUTION=( "GEOLIBWRAPPER.sln" )

    CMAKE_PARAMS+=( -DCMAKE_CONFIGURATION_TYPES="${BUILD_TYPE}" )
    CMAKE_PARAMS+=( -DCSHARP_PLATFORM="${CSHARP_PLATFORM}" )
    CMAKE_PARAMS+=( -DGeographicLib_DIR="${geographiclib_INSTALL_DIR}/cmake" )
    ;;
  Darwin )
    CMAKE_PARAMS+=( -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" )
    CMAKE_PARAMS+=( -DCMAKE_CXX_FLAGS="-Wall -std=c++11 -stdlib=libc++" )
    CMAKE_PARAMS+=( -DGeographicLib_DIR="${geographiclib_INSTALL_DIR}/lib/cmake/GeographicLib" )
    ;;
  Linux )
    CMAKE_PARAMS+=( -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" )
    CMAKE_PARAMS+=( -DCMAKE_CXX_FLAGS="-Wall -Wno-return-type -Wno-unused-local-typedefs -std=c++11" )
    CMAKE_PARAMS+=( -DGeographicLib_DIR="${geographiclib_INSTALL_DIR}/lib/cmake/GeographicLib" )
    ;;
esac
